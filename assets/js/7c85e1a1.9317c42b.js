"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[83],{5438:function(e,t,a){a.r(t),a.d(t,{contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return r},metadata:function(){return u},toc:function(){return c}});var n=a(7462),o=a(3366),s=(a(7294),a(3905));a(9055);var i=["components"],r={sidebar_position:3},l="Examples",u={unversionedId:"firstSteps/examples",id:"firstSteps/examples",title:"Examples",description:"Custom Firmware",source:"@site/docs/firstSteps/examples.mdx",sourceDirName:"firstSteps",slug:"/firstSteps/examples",permalink:"/CubeTouch/docs/firstSteps/examples",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/firstSteps/examples.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Know you hardware",permalink:"/CubeTouch/docs/firstSteps/hardware"},next:{title:"Congratulations!",permalink:"/CubeTouch/docs/firstSteps/congratulations"}},c=[{value:"Custom Firmware",id:"custom-firmware",children:[],level:2},{value:"Easy RGB",id:"easy-rgb",children:[],level:2},{value:"Chasse Text",id:"chasse-text",children:[],level:2},{value:"Easy Touch",id:"easy-touch",children:[],level:2},{value:"CDC and Keyboard",id:"cdc-and-keyboard",children:[],level:2},{value:"Custom bootloader",id:"custom-bootloader",children:[],level:2}],d={toc:c};function h(e){var t=e.components,r=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"examples"},"Examples"),(0,s.kt)("h2",{id:"custom-firmware"},"Custom Firmware"),(0,s.kt)("h2",{id:"easy-rgb"},"Easy RGB"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/Noteolvides/CubeTouch-Software/blob/master/Examples/EasyRGB/EasyRGB.ino"},"https://github.com/Noteolvides/CubeTouch-Software/blob/master/Examples/EasyRGB/EasyRGB.ino")),(0,s.kt)("p",null,"A simple example that receives an RGB hex value and displays it.\nSend hex color to the Serial Monitor following this format (R,G,B): #0B4F02"),(0,s.kt)("div",{className:"container"},(0,s.kt)("div",{className:"row",style:{alignItems:"center"}},(0,s.kt)("img",{height:"400",style:{objectFit:"contain"},className:"col col--6",src:a(1333).Z,alt:"How To Send RGB CODE"}),(0,s.kt)("img",{height:"450",style:{objectFit:"contain"},className:"col col--6",src:a(8069).Z,alt:"Result Photo"}))),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Show Code"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"\n#include <WS2812.h>\n#include <stdio.h>\n\n#define NUM_LEDS 6\n#define COLOR_PER_LEDS 3\n#define NUM_BYTES (NUM_LEDS * COLOR_PER_LEDS)\n\n__xdata uint8_t ledData[NUM_BYTES];\n__xdata char buffer[8];\nuint8_t bufferPtr = 0;\n\nvoid setAll(uint8_t r, uint8_t g, uint8_t b) {\n  uint8_t i;\n  for (i = 0; i < NUM_LEDS; i++) {\n    set_pixel_for_GRB_LED(ledData, i, r, g, b);\n  }\n  neopixel_show_P3_4(ledData, NUM_BYTES);\n}\n\nuint8_t hex2int(char hex[3]) {\n  uint8_t val = 0;\n  while (*hex) {\n    // get current character then increment\n    char byte = *hex++;\n    // transform hex character to the 4bit equivalent number, using the ascii table indexes\n    if (byte >= '0' && byte <= '9')\n      byte = byte - '0';\n    else if (byte >= 'a' && byte <= 'f')\n      byte = byte - 'a' + 10;\n    else if (byte >= 'A' && byte <= 'F')\n      byte = byte - 'A' + 10;\n    // shift 4 to make space for new digit, and add the 4 bits of the new digit\n    val = (val << 4) | (byte & 0xF);\n  }\n  return val;\n}\n\nvoid setup() {\n  pinMode(34, OUTPUT);  // LEDS PIN\n}\n\nvoid sendColors() {\n  char auxString[3];\n  uint8_t r, g, b;\n  auxString[0] = buffer[1];\n  auxString[1] = buffer[2];\n  auxString[2] = '\\0';\n  r = hex2int(auxString);\n  auxString[0] = buffer[3];\n  auxString[1] = buffer[4];\n  auxString[2] = '\\0';\n  g = hex2int(auxString);\n  auxString[0] = buffer[5];\n  auxString[1] = buffer[6];\n  auxString[2] = '\\0';\n  b = hex2int(auxString);\n  setAll(r, g, b);\n  USBSerial_println_s(\"Done! Just a remainter send hex color following this format : #0B4F02\");\n  USBSerial_flush();\n}\n\nvoid loop() {\n  while (USBSerial_available()) {\n    char serialChar = USBSerial_read();\n    buffer[bufferPtr] = serialChar;\n    bufferPtr++;\n    if (bufferPtr == 7) {\n      buffer[bufferPtr] = '\\0';\n      bufferPtr = 0;\n      sendColors();\n    }\n    if ((serialChar == '\\n') || (serialChar == '\\r')) {\n      buffer[bufferPtr] = '\\0';\n      bufferPtr = 0;\n      break;\n    }\n  }\n}\n\n"))),(0,s.kt)("h2",{id:"chasse-text"},"Chasse Text"),(0,s.kt)("p",null,"No configuration, just upload the sketch and enjoy the beautiful colors."),(0,s.kt)("div",{style:{display:"flex",justifyContent:"center"}},(0,s.kt)("video",{autoPlay:!0,muted:!0,loop:!0,src:a(8634).Z})),(0,s.kt)("h2",{id:"easy-touch"},"Easy Touch"),(0,s.kt)("p",null,"A simple example that when a face is touch prints the face that has received input from."),(0,s.kt)("div",{style:{display:"flex",justifyContent:"center"}},(0,s.kt)("video",{style:{width:"100%"},autoPlay:!0,muted:!0,loop:!0,src:a(7711).Z})),(0,s.kt)("h2",{id:"cdc-and-keyboard"},"CDC and Keyboard"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/Noteolvides/CubeTouch-Software/blob/master/Examples/CDC_KEYBOARD/CDC_KEYBOARD.ino"},"https://github.com/Noteolvides/CubeTouch-Software/blob/master/Examples/CDC_KEYBOARD/CDC_KEYBOARD.ino")),(0,s.kt)("p",null,"This examples echoes next character of data it receives via the serial monitor."),(0,s.kt)("div",{className:"margin-bottom--lg",style:{display:"flex",justifyContent:"center"}},(0,s.kt)("video",{style:{width:"100%"},autoPlay:!0,muted:!0,loop:!0,src:a(8639).Z})),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f This example needs to be compiled with a ",(0,s.kt)("strong",{parentName:"p"},"USER USB")," setting\nTools--\x3e USB Settings--\x3e USER CODE w/148 USB Ram")),(0,s.kt)("h2",{id:"custom-bootloader"},"Custom bootloader"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/Noteolvides/CubeTouch-Software/blob/master/Examples/CustomBootloader/CustomBootloader.ino"},"https://github.com/Noteolvides/CubeTouch-Software/blob/master/Examples/CustomBootloader/CustomBootloader.ino")),(0,s.kt)("p",null,"This example that shows how to jump to the bootloader address to make it reprogrammable.\nYou can send the character B, or connect the pin 11 to GND."))}h.isMDXComponent=!0},1333:function(e,t,a){t.Z=a.p+"assets/images/EasyRGB-6b14ed0e25583c7878fe15f634a36cda.png"},8069:function(e,t,a){t.Z=a.p+"assets/images/EasyRGBPhoto-240545df5440c37c89ee39c4b258d230.jpg"},8639:function(e,t,a){t.Z=a.p+"assets/medias/CDC_KEYBOARD-6f56548b97808dcfc8ac14591c6d770a.mp4"},8634:function(e,t,a){t.Z=a.p+"assets/medias/ChaseTest-d40195957a7900d353474fcbe29dccd1.mp4"},7711:function(e,t,a){t.Z=a.p+"assets/medias/EasyTouch-40c89e4baf90548e0f452b633b6157b6.mp4"}}]);