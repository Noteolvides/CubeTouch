"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[584],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return h}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),h=o,m=d["".concat(u,".").concat(h)]||d[h]||c[h]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8281:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={sidebar_position:1},u="Program your device",s={unversionedId:"firstSteps/programming",id:"firstSteps/programming",title:"Program your device",description:"CubeTouch is build with a ch552 microcontroller, a super cheap but powerful microcontroller.",source:"@site/docs/firstSteps/programming.md",sourceDirName:"firstSteps",slug:"/firstSteps/programming",permalink:"/CubeTouch/docs/firstSteps/programming",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/firstSteps/programming.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Welcome to the docs",permalink:"/CubeTouch/docs/intro"},next:{title:"Know you hardware",permalink:"/CubeTouch/docs/firstSteps/hardware"}},p=[{value:"Arduino board Integration.",id:"arduino-board-integration",children:[{value:"For linux users",id:"for-linux-users",children:[],level:3},{value:"For windows Users.",id:"for-windows-users",children:[],level:3},{value:"Warnings \u26a0\ufe0f",id:"warnings-\ufe0f",children:[{value:"Unreprogrammable device",id:"unreprogrammable-device",children:[],level:4}],level:3}],level:2}],c={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"program-your-device"},"Program your device"),(0,a.kt)("p",null,"CubeTouch is build with a ch552 microcontroller, a super cheap but powerful microcontroller."),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},'"official"')," compiler for this microcontroller is the CK51 but this compiler is only available as paid software."),(0,a.kt)("p",null,"That's why people like ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/Blinkinlabs/ch554_sdcc"},"Blinkinlabs")),"\nand ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/DeqingSun/ch55xduino"},"DeqingSun"))," have created a port of the CH554 SDK, from Keli C51 to\nSDCC (a free compiler)."),(0,a.kt)("p",null,"The easiest way to start programing the ",(0,a.kt)("strong",{parentName:"p"},"CubeTouch")," is using ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/DeqingSun/ch55xduino"},"ch55xduino")),"\nport for Arduino and this will be the follow explanation here."),(0,a.kt)("p",null,"You can follow the  ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/DeqingSun/ch55xduino"},"ch55xduino")),"  guide or stick with the following one\nthat will go a bit more in depth."),(0,a.kt)("h2",{id:"arduino-board-integration"},"Arduino board Integration."),(0,a.kt)("p",null,"First you must obtain the arduino IDE you can get it from ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://www.arduino.cc/en/software"},"here")),"."),(0,a.kt)("p",null,"Automatic IDE integration is supported via the Arduino Boards Manager. This is the recommended way of installation now."),(0,a.kt)("p",null,"Start the Arduino-IDE. In ",(0,a.kt)("em",{parentName:"p"},"File->Preferences"),", ",(0,a.kt)("em",{parentName:"p"},"Settings")," tab, enter"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/DeqingSun/ch55xduino/ch55xduino/package_ch55xduino_mcs51_index.json"},"https://raw.githubusercontent.com/DeqingSun/ch55xduino/ch55xduino/package_ch55xduino_mcs51_index.json"))),(0,a.kt)("p",null,"as an ",(0,a.kt)("em",{parentName:"p"},"Additional Boards Manager URL"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Open ",(0,a.kt)("em",{parentName:"li"},"Tools->Board:...->Boards Manager")),(0,a.kt)("li",{parentName:"ul"},"Find Ch55xduino by typing 'ch' into the search line"),(0,a.kt)("li",{parentName:"ul"},"Click on the list entry"),(0,a.kt)("li",{parentName:"ul"},"Click on ",(0,a.kt)("em",{parentName:"li"},"Install"),".")),(0,a.kt)("p",null,"Now you should find a new entry ",(0,a.kt)("em",{parentName:"p"},"CH55x Boards")," in the list at."),(0,a.kt)("p",null,"The smarter way to start creating you own code is to read some of the examples created for the CubeTouch. You can\ncheck it out in the followings pages or ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/Noteolvides/CubeTouch-Software/tree/master/CDC_KEYBOARD"},"here")),"."),(0,a.kt)("h3",{id:"for-linux-users"},"For linux users"),(0,a.kt)("p",null,"By default, Linux will not expose enough permission for Arduino to upload the code with the USB bootloader. Copy the\nfollowing code as a file with the name 99-ch55xbl.rules to /etc/udev/rules.d/. Otherwise, the upload tool may not find\nthe bootloader device."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# CH55x bootloader\n# copy to /etc/udev/rules.d/\n\nSUBSYSTEM=="usb", ATTRS{idVendor}=="4348", ATTRS{idProduct}=="55e0", MODE="0666"\n')),(0,a.kt)("h3",{id:"for-windows-users"},"For windows Users."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/DeqingSun/ch55xduino/ch55xduino/docs/Zadig_bootloader_libusb.png",alt:"Zadig image"})),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://zadig.akeo.ie/"},"Zadig")," is the recommended tool to install drivers in Windows. The bootloader (4348,55E0) should\nbe installed with libusb-win32 driver (WinUSB driver may not work on some computer)."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/DeqingSun/ch55xduino/ch55xduino/docs/Zadig_CDC.png",alt:"Zadig CDC image"})),(0,a.kt)("p",null,"You can use USB Serial (CDC) driver for the default CDC USB stack (1209,C550)."),(0,a.kt)("p",null,"If you tried to emulate another type of USB device without changing the PID/VID, you may need to uninstall the device\nbefore installing a new driver."),(0,a.kt)("h3",{id:"warnings-\ufe0f"},"Warnings \u26a0\ufe0f"),(0,a.kt)("p",null,"To reprogram the CubeTouch we use the Ch55xduino USB bootloader this uses\nthe ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://en.wikipedia.org/wiki/USB_communications_device_class"},"USB CDC"))," that's why you can use any examples\nthat Ch55xduino provides except the ones that change the USB stack, ie:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"CDCinUserCode \ud83d\udcdb"),(0,a.kt)("li",{parentName:"ul"},"CMSIS_DAP \ud83d\udcdb"),(0,a.kt)("li",{parentName:"ul"},"HIDKeyboard \ud83d\udcdb"),(0,a.kt)("li",{parentName:"ul"},"MassStorage \ud83d\udcdb"),(0,a.kt)("li",{parentName:"ul"},"NoUsbExample \ud83d\udcdb")),(0,a.kt)("p",null,"If you want to change or use the examples mentioned above and want to reprogram the device later you have to add a back\ndoor to be able to reprogram the device. For example calling this function when an input goes high."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'void jump_to_bootloader() {\n    USB_INT_EN = 0;   // USB interrupt disable\n    USB_CTRL = 0x06;  // USB base control Reset\n    delay(100);\n    EA = 0;                    // Disable all interrupts\n    __asm__("lcall #0x3800");  // Jump to bootloader code\n    while (1);\n}\n')),(0,a.kt)("p",null,"Furthermore, CubeTouch provide a ",(0,a.kt)("strong",{parentName:"p"},"CDC + HID Keyboard USB")," example that enables to use the virtual serial and the\nkeyboard emulation without losing the ability to reprogram the device. You can check it out\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/Noteolvides/CubeTouch-Software/tree/master/CDC_KEYBOARD"},"here")),"."),(0,a.kt)("h4",{id:"unreprogrammable-device"},"Unreprogrammable device"),(0,a.kt)("p",null,"If you have uploaded unreprogrammable code to your device you can reprogram it by desoldering the bottom pcb joints and\nexposing the reprogram button. Then you must press the button while inserting the usb in to the computer this would make\nthe device jump automatically to the bootloader address."))}d.isMDXComponent=!0}}]);